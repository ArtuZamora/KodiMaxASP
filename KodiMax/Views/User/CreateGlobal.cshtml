@model KodiMax.Models.UserCE

@using (Html.BeginForm("CreateGlobal", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div id="createSection" style="display:none">
        <form class="login100-form validate-form">
            <span class="login100-form-title">
                KodiMax Registro
            </span>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Names, new
               {
                   htmlAttributes = new
                   {
                       @class = "input100",
                       @type = "text",
                       @placeholder = "Nombres"
                   }
               })
                    @Html.ValidationMessageFor(model => model.Names, "", new { @class = "text-danger" })
                </div>
            </div><br /><br /><br />

            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.LastNames, new
               {
                   htmlAttributes = new
                   {
                       @class = "input100",
                       @type = "text",
                       @placeholder = "Apellidos"
                   }
               })
                    @Html.ValidationMessageFor(model => model.LastNames, "", new { @class = "text-danger" })
                </div>
            </div><br /><br /><br />

            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Email, new
               {
                   htmlAttributes = new
                   {
                       @class = "input100",
                       @type = "text",
                       @placeholder = "Email"
                   }
               })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div><br /><br /><br />

            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Cellphone, new
               {
                   htmlAttributes = new
                   {
                       @class = "input100",
                       @type = "text",
                       @placeholder = "Número de Teléfono"
                   }
               })
                    @Html.ValidationMessageFor(model => model.Cellphone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p class="control-label col-md-2"><b>Género</b></p><br /><br />
                <div class="col-md-12">
                    <select class="input100" id="Genre" name="Genre" type="select">
                        <option value="F">Femenino</option>
                        <option value="M">Masculino</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p class="control-label col-md-7"><b>Fecha de nacimiento</b></p><br /><br />
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Birthdate, new
               {
                   htmlAttributes = new
                   {
                       @class = "input100",
                       @type = "date"
                   }
               })
                    @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12 p-3">
                    @Html.EditorFor(model => model.Username, new
               {
                   htmlAttributes = new
                   {
                       @class = "input100",
                       @type = "text",
                       @placeholder = "Nombre de usuario"
                   }
               })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div><br /><br /><br />

            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Password, new
               {
                   htmlAttributes = new
                   {
                       @class = "input100",
                       @type = "password",
                       @placeholder = "Contraseña"
                   }
               })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p class="control-label col-md-2"><b>Usuario</b></p><br /><br />
                <div class="col-md-12">
                    <select class="input100" id="Type" name="Type" type="select">
                        <option value="client">Cliente</option>
                        <option value="employee">Empleado</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CompanyID, new
               {
                   htmlAttributes = new
                   {
                       @class = "input100",
                       @type = "text",
                       @placeholder = "ID de Empresa"
                   }
               })
                    @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="container-login100-form-btn">
                    <button type="submit" value="Crear" class="login100-form-btn" id="CreateUserG">
                        Crear Cuenta
                    </button>
                </div>
            </div>
            <div class="text-center p-t-50">
                <a class="txt2 handCursor" id="returnArrow">
                    <i class="fa fa-long-arrow-left m-l-5" aria-hidden="true"></i>
                    Regresar
                </a>
            </div>
        </form>
    </div>
}
